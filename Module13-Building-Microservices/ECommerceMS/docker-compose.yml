version: "3.8"

services:
  # Product Catalog Service
  product-catalog:
    build:
      context: ./src/ProductCatalog.Service
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ProductCatalogDB;User Id=sa;Password=YourPassword123!;TrustServerCertificate=true
      - RabbitMQ__ConnectionString=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - ecommerce-network

  # Order Management Service
  order-management:
    build:
      context: ./src/OrderManagement.Service
      dockerfile: Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=OrderManagementDB;User Id=sa;Password=YourPassword123!;TrustServerCertificate=true
      - RabbitMQ__ConnectionString=amqp://guest:guest@rabbitmq:5672/
      - Services__ProductCatalog=http://product-catalog:80
    depends_on:
      - sqlserver
      - rabbitmq
      - product-catalog
    networks:
      - ecommerce-network

  # User Management Service
  user-management:
    build:
      context: ./src/UserManagement.Service
      dockerfile: Dockerfile
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=UserManagementDB;User Id=sa;Password=YourPassword123!;TrustServerCertificate=true
    depends_on:
      - sqlserver
    networks:
      - ecommerce-network

  # API Gateway
  api-gateway:
    build:
      context: ./src/ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Services__ProductCatalog=http://product-catalog:80
      - Services__OrderManagement=http://order-management:80
      - Services__UserManagement=http://user-management:80
    depends_on:
      - product-catalog
      - order-management
      - user-management
    networks:
      - ecommerce-network

  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourPassword123!
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - ecommerce-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - ecommerce-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ecommerce-network

volumes:
  sqlserver-data:
  rabbitmq-data:
  redis-data:

networks:
  ecommerce-network:
    driver: bridge
