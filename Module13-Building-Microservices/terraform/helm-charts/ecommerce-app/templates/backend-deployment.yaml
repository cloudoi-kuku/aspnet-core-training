{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecommerce-app.fullname" . }}-backend
  labels:
    {{- include "ecommerce-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.autoscaling.backend.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ecommerce-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "ecommerce-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "ecommerce-app.fullname" . }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      initContainers:
        - name: wait-for-redis
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z {{ .Release.Name }}-redis-master 6379; do
                echo "Waiting for Redis..."
                sleep 2
              done
              echo "Redis is ready!"
        - name: wait-for-rabbitmq
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z {{ .Release.Name }}-rabbitmq 5672; do
                echo "Waiting for RabbitMQ..."
                sleep 2
              done
              echo "RabbitMQ is ready!"
      containers:
        - name: backend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.backend.service.metricsPort }}
              protocol: TCP
          env:
            {{- range .Values.backend.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: ConnectionStrings__DefaultConnection
              value: "Data Source=/app/data/ecommerce.db"
            - name: ConnectionStrings__Redis
              value: "{{ .Release.Name }}-redis-master:6379"
            - name: ConnectionStrings__RabbitMQ
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Release.Name }}-rabbitmq:5672/"
            - name: JwtSettings__SecretKey
              valueFrom:
                secretKeyRef:
                  name: {{ include "ecommerce-app.fullname" . }}-secret
                  key: jwt-secret
            - name: JwtSettings__Issuer
              value: {{ .Values.config.jwt.issuer | quote }}
            - name: JwtSettings__Audience
              value: {{ .Values.config.jwt.audience | quote }}
          {{- if .Values.backend.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: data
              mountPath: /app/data
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: tmp
          emptyDir: {}
        - name: logs
          emptyDir: {}
        {{- if .Values.database.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "ecommerce-app.fullname" . }}-data
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
